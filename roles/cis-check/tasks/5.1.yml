---
### 5.1 Configure cron
- name: 5.1.1 Ensure cron daemon is enabled (Scored)
  block:
    - name: 5.1.1 Ensure cron daemon is enabled
      shell: "systemctl is-enabled crond"
      register: v511
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.1 Ensure cron daemon is enabled (Scored)": "enabled" in v511.stdout}) }}'
- name: 5.1.2 Ensure permissions on /etc/crontab are configured (Scored)
  block:
    - name:
      shell: "stat /etc/crontab"
      register: v512
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.2 Ensure permissions on /etc/crontab are configured (Scored)": v512.stdout is match("Access:\s*\(0600\/-rw[-x]------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\(\s*0\/\s*root\)")}) }}'
- name: 5.1.3 Ensure permissions on /etc/cron.hourly are configured (Scored)
  block:
    - name: 5.1.3 Ensure permissions on /etc/cron.hourly are configured
      shell: "stat /etc/cron.hourly"
      register: v513
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.3 Ensure permissions on /etc/cron.hourly are configured (Scored)": v513.stdout is match("Access:\s*\(0700\/-rw[x-]------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\s*\(\s*0\/\s*root\)")}) }}'
- name: 5.1.4 Ensure permissions on /etc/cron.daily are configured (Scored)
  block:
    - name: 5.1.4 Ensure permissions on /etc/cron.daily are configured
      shell: "stat /etc/cron.daily"
      register: v514
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.4 Ensure permissions on /etc/cron.daily are configured (Scored)": v514.stdout is match("Access:\s*\(0700\/-rw[x-]------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\s*\(\s*0\/\s*root\)")}) }}'
- name: 5.1.5 Ensure permissions on /etc/cron.weekly are configured (Scored)
  block:
    - name: 5.1.5 Ensure permissions on /etc/cron.weekly are configured
      shell: "stat /etc/cron.weekly"
      register: v515
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.5 Ensure permissions on /etc/cron.weekly are configured (Scored)": v515.stdout is match("Access:\s*\(0700\/-rw[x-]------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\s*\(\s*0\/\s*root\)")}) }}'
- name: 5.1.6 Ensure permissions on /etc/cron.monthly are configured (Scored)
  block:
    - name: 5.1.6 Ensure permissions on /etc/cron.monthly are configured
      shell: "stat /etc/cron.monthly"
      register: v516
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.6 Ensure permissions on /etc/cron.monthly are configured (Scored)": v516.stdout is match("Access:\s*\(0700\/-rw-------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\s*\(\s*0\/\s*root\)")}) }}'
- name: 5.1.7 Ensure permissions on /etc/cron.d are configured (Scored)
  block:
    - name: 5.1.7 Ensure permissions on /etc/cron.d are configured
      shell: "stat /etc/cron.d"
      register: v517
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.7 Ensure permissions on /etc/cron.d are configured (Scored)": v517.stdout is match("Access:\s*\(0700\/-rw[x-]------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\s*\(\s*0\/\s*root\)")}) }}'
- name: 5.1.8 Ensure at/cron is restricted to authorized users (Scored)
  block:
    - name: 5.1.8 Ensure at/cron is restricted to authorized users [cron.allow]
      shell: "stat /etc/cron.allow"
      ignore_errors: true
      register: v518_1
    - name: 5.1.8 Ensure at/cron is restricted to authorized users [at.allow]
      shell: "stat /etc/at.allow"
      register: v518_2
      ignore_errors: true
    - name: 5.1.8 Ensure at/cron is restricted to authorized users [cron.deny]
      shell: "stat /etc/cron.deny"
      ignore_errors: true
      register: v518_3
    - name: 5.1.8 Ensure at/cron is restricted to authorized users [at.deny]
      shell: "stat /etc/at.deny"
      register: v518_4
      ignore_errors: true
    - set_fact:
        results: '{{ results|combine({"5.1.8 Ensure at/cron is restricted to authorized users (Scored)": v518_1.stdout is match("Access:\s*\(0600\/-rw-------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\s*\(\s*0\/\s*root\)") and v518_2.stdout is match("Access:\s*\(0600\/-rw-------\)\s*Uid:\s*\(\s*0\/\s*root\)\s*Gid:\s*( 0/ root)") and (v518_3.rc==1 and "No such file or directory" in v518_3.stderr) and (v518.rc == 1 and "No such file or directory" in v518_4.stderr)}) }}'